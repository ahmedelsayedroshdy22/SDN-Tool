pipeline {
    agent any

    environment {
        IMAGE_NAME = 'sdn_tool_image'
        CONTAINER_NAME = 'SDN_TOOL'
        APP_PORT = '8070'
    }

    stages {
        stage('Build Docker Image') {
            steps {
                script {
                    echo 'üê≥ Building new Docker image...'
                    def buildTag = "${env.BUILD_NUMBER}"
                    sh """
                  sudo docker build -t ${IMAGE_NAME}:${buildTag} -t ${IMAGE_NAME}:latest .
                    """
                }
            }
        }

        stage('Stop Old Container') {
            steps {
                echo 'üõë Stopping old container (if running)...'
                sh "sudo docker stop ${CONTAINER_NAME} || true"
                sh "sudo docker rm ${CONTAINER_NAME} || true"
            }
        }

        stage('Run New Container') {
            steps {
                echo 'üöÄ Running new container...'
                sh """
                sudo docker run -d \
                  -p ${APP_PORT}:${APP_PORT} \
                  --name ${CONTAINER_NAME} \
                  ${IMAGE_NAME}:latest
                """
            }
        }
    }

    post {
        success {
            echo '‚úÖ Deployment successful! Your Flask app is live.'
        }
        failure {
            echo '‚ùå Build failed. Check Jenkins logs for details.'
        }
    }
}
